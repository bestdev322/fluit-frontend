image: node:14.15.1

pipelines:
  default:
      - step:
          name: Build and Deploy Dinamic Branch
          script:
            # Instala as dependÍncias e faz o build
            - npm install
            - npm run build
            - export BRANCH=$BITBUCKET_BRANCH
            - export BUCKET_NAME=${BRANCH}-app.verum.digital       
            # Faz o deploy dos arquivos para o bucket S3 da AWS
            - apt-get update && apt-get install -y curl unzip
            - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" 
            - unzip awscliv2.zip
            - ./aws/install 
            - aws --version
            - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            #cria o bucket e aplica as configuracoes necessarias
            - aws s3api create-bucket --bucket $BUCKET_NAME --region us-east-1
            - aws s3 website s3://$BUCKET_NAME --index-document index.html --error-document error.html
            - echo '{"Version":"2012-10-17","Statement":[{"Sid":"AllowPublicReadAccess","Effect":"Allow","Principal":"*","Action":"s3:GetObject","Resource":"arn:aws:s3:::${BUCKET_NAME}/*"}]}' > policy.json
            - aws s3api put-bucket-policy --bucket $BUCKET_NAME --policy policy.json
            - aws s3 sync build/ s3://$BUCKET_NAME --delete

  branches:
    master:
      - step:
          name: Deploy to stg
          caches:
                - pip                
          script:
            - echo "Deploy to STG"             
            # Instala as dependÍncias e faz o build
            - npm install
            - npm run build
            # Faz o deploy dos arquivos para o bucket S3 da AWS
            - apt-get update && apt-get install -y curl unzip
            - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" 
            - unzip awscliv2.zip
            - ./aws/install 
            - aws --version
            - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY            
            - aws s3 sync build/ s3://stg-app.verum.digital --delete
            - aws cloudfront create-invalidation --distribution-id E3IGKST1D8BS50 --paths "/*"
      - step:
          name: Deploy to production
          trigger: manual
          script:
            - echo "Deploying to production"
            - echo "REACT_APP_API_HOST=${REACT_APP_API_HOST}" >> .env
            # Instala as dependÍncias e faz o build
            - npm install
            - npm run build
            #- aws s3api create-bucket --bucket nome-do-seu-bucket --region us-west-2

            # Faz o deploy dos arquivos para o bucket S3 da AWS
            - apt-get update && apt-get install -y curl unzip
            - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" 
            - unzip awscliv2.zip
            - ./aws/install 
            - aws --version
            - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            - aws s3 sync build/ s3://app.verum.digital --delete
            - aws cloudfront create-invalidation --distribution-id E1ID86DH2ID5Z5 --paths "/*"